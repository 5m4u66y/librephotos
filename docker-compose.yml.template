version: '2'

services:

  proxy:
    image: reallibrephotos/librephotos-proxy:dev
    tty: true
    container_name: librephotos-proxy
    restart: always
    links:
      - "backend:backend"
      - "frontend:frontend"
    ports:
      - "3000:80"
      
  librephotos-db:
    image: postgres
    container_name: librephotos-db
    restart: always
    environment:
    # This db password is internal, you can change it if you want, but also change it in librephotos-backend container
      - POSTGRES_PASSWORD=AaAa1234
      - POSTGRES_DB=ownphotos
    volumes:
      - librephotos-data:/var/lib/postgresql/data

  frontend:
    image: reallibrephotos/librephotos-frontend:dev
    # For development uncomment this and comment the image name above
    #build: ./librephotos/librephotos-frontend/
    container_name: librephotos-frontend
    tty: true
    links:
      - "backend:backend"

  backend:
    image: reallibrephotos/librephotos:dev
    # For development uncomment this and comment the image name above
    #build: .
    container_name: librephotos-backend
    volumes:
      - $HOME/photos:/data # CHANGE ME
      - $HOME/librephotos_media/:/code/protected_media # CHANGE ME
      - $HOME/librephotos_logs/:/code/logs # CHANGE ME
    environment:
      - SECRET_KEY=changeme # CHANGE ME
      - BACKEND_HOST=backend # DON'T CHANGE ME
      - ADMIN_EMAIL=admin@example.com # CHANGE ME
      - ADMIN_USERNAME=demo # CHANGE ME
      - ADMIN_PASSWORD=demo1234 # CHANGE ME
      - DEBUG=false
      - DB_BACKEND=postgresql
      - DB_NAME=ownphotos
      - DB_USER=postgres
      # This db password is internal, you can change it if you want, but also change it in librephotos-db container
      - DB_PASS=AaAa1234
      - DB_HOST=librephotos-db
      - DB_PORT=5432
      - REDIS_HOST=librephotos-redis
      - REDIS_PORT=6379
      - MAPBOX_API_KEY=apikey #CHANGE ME - sign up at mapbox.com for an api key. You need this for reverse geocoding
    links:
      - "librephotos-db:librephotos-db"
      - "librephotos-redis:librephotosv-redis"
  
  librephotos-redis:
    image: redis
    container_name: librephotos-redis

volumes:
  librephotos-data:
  media:
